---
import { SITE_TITLE, NAV_ITEMS, SOCIAL_LINKS } from '../consts';
import ThemeToggle from './ThemeToggle.astro';
---

<header class="site-header">
	<div class="container">
		<nav class="site-header__nav">
			<a href="/" class="site-header__logo">
				{SITE_TITLE}
			</a>
			
			<ul class="site-header__nav-links">
				{NAV_ITEMS.map(item => (
					<li>
						<button
							class="site-header__nav-link filter-btn"
							data-filter={item.filter}
						>
							{item.label}
						</button>
					</li>
				))}
			</ul>
			
			<div class="site-header__actions">
				<div class="search-box">
					<input 
						type="search" 
						placeholder="Sök AI-nyheter..." 
						class="search-box__input"
						id="search-input"
					/>
					<svg class="search-box__icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<circle cx="11" cy="11" r="8"></circle>
						<path d="m21 21-4.35-4.35"></path>
					</svg>
				</div>
				
				<ThemeToggle />
				
				<div class="social-links">
					{SOCIAL_LINKS.map(link => (
						<a 
							href={link.url} 
							target="_blank" 
							rel="noopener noreferrer"
							class="social-link"
							aria-label={`Följ oss på ${link.name}`}
						>
							{link.icon === 'linkedin' && (
								<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
									<path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
								</svg>
							)}
							{link.icon === 'twitter' && (
								<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
									<path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
								</svg>
							)}
						</a>
					))}
				</div>
			</div>
		</nav>
	</div>
</header>

<style>
	.site-header {
		background: var(--bg-primary);
		backdrop-filter: blur(20px);
		border-bottom: 1px solid var(--color-border);
		position: sticky;
		top: 0;
		z-index: 100;
		transition: background var(--transition-normal), border-color var(--transition-normal);
	}

	.site-header__nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 1rem 0;
	}

	.site-header__logo {
		font-size: 1.5rem;
		font-weight: 700;
		text-decoration: none;
		color: var(--text-primary);
		transition: color var(--transition-normal);
	}

	.site-header__logo:hover {
		color: var(--color-accent);
	}

	.site-header__nav-links {
		display: flex;
		align-items: center;
		gap: 2rem;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	.site-header__nav-link {
		background: none;
		border: none;
		text-decoration: none;
		color: var(--text-primary);
		font-weight: 500;
		transition: color var(--transition-normal);
		position: relative;
		padding: 0.5rem 0;
		cursor: pointer;
		font-size: inherit;
		font-family: inherit;
	}

	.site-header__nav-link:hover {
		color: var(--color-accent);
	}

	.site-header__nav-link.active::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 2px;
		background: var(--color-accent);
		border-radius: 1px;
	}

	.site-header__actions {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}

	.search-box {
		position: relative;
		max-width: 300px;
	}

	.search-box__input {
		width: 100%;
		padding: 0.5rem 1rem 0.5rem 2.5rem;
		border: 1px solid var(--color-border);
		border-radius: 20px;
		font-size: 0.875rem;
		background: var(--tile-background);
		color: var(--text-primary);
		transition: all var(--transition-normal);
	}

	.search-box__input:focus {
		outline: none;
		border-color: var(--color-accent);
		box-shadow: 0 0 0 3px rgba(0, 113, 227, 0.1);
	}

	.search-box__input::placeholder {
		color: var(--text-secondary);
	}

	.search-box__icon {
		position: absolute;
		left: 0.75rem;
		top: 50%;
		transform: translateY(-50%);
		color: var(--text-secondary);
		pointer-events: none;
		transition: color var(--transition-normal);
	}

	.social-links {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.social-link {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		border-radius: 50%;
		color: var(--text-secondary);
		transition: all var(--transition-normal);
		text-decoration: none;
	}

	.social-link:hover {
		color: var(--color-accent);
		background: var(--color-tertiary);
	}

	/* Mobile Responsive */
	@media (max-width: 768px) {
		.site-header__nav-links {
			display: none;
		}
		
		.site-header__actions {
			gap: 1rem;
		}
		
		.search-box {
			max-width: 200px;
		}
		
		.social-links {
			gap: 0.5rem;
		}
		
		.social-link {
			width: 36px;
			height: 36px;
		}
	}

	@media (max-width: 480px) {
		.site-header__nav {
			padding: 0.75rem 0;
		}
		
		.site-header__logo {
			font-size: 1.25rem;
		}
		
		.search-box {
			max-width: 150px;
		}
		
		.search-box__input {
			font-size: 0.8rem;
			padding: 0.4rem 0.8rem 0.4rem 2rem;
		}
		
		.search-box__icon {
			left: 0.6rem;
			width: 14px;
			height: 14px;
		}
	}
</style>

<script>
	// Search and filter functionality
	document.addEventListener('DOMContentLoaded', () => {
		const searchInput = document.getElementById('search-input') as HTMLInputElement;
		const filterButtons = document.querySelectorAll('.filter-btn');
		
		// Search functionality
		if (searchInput) {
			searchInput.addEventListener('keypress', (e) => {
				if (e.key === 'Enter') {
					const query = searchInput.value.trim();
					if (query) {
						// Dispatch custom event for search
						window.dispatchEvent(new CustomEvent('search', { detail: { query } }));
					}
				}
			});
		}

		// Filter functionality
		filterButtons.forEach(button => {
			button.addEventListener('click', () => {
				// Remove active class from all buttons
				filterButtons.forEach(btn => btn.classList.remove('active'));
				// Add active class to clicked button
				button.classList.add('active');
				
				// Get filter value
				const filter = button.getAttribute('data-filter');
				
				// Dispatch custom event for filtering
				window.dispatchEvent(new CustomEvent('filter', { detail: { filter } }));
			});
		});

		// Set "Senaste" as default active filter
		const defaultFilter = document.querySelector('[data-filter="senaste"]');
		if (defaultFilter) {
			defaultFilter.classList.add('active');
		}
	});
</script>
